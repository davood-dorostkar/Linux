import os
import argparse

executable_types=['.exe', '.wsh', '.bat', '.com', '.cmd', '.inf', '.ipa', '.osx', '.pif', '.run']
script_types=['.sh', '.pl', '.js', '.py', '.rb', '.ps1', '.vbs', '.vb', '.hta', '.wsf', '.msh', '.msh1', '.msh2', '.mshxml', '.msh1xml', '.msh2xml']
archive_types=['.zip', '.rar', '.7z', '.tar', '.gz', '.tgz', '.tbz2', '.tlz', '.txz', '.taz', '.enc', '.locky', '.crypt']
document_types=['.docm', '.xlsm', '.pptm']
disk_image_types=['.iso', '.img', '.dmg']
installer_types=['.msi', '.msp', '.pkg']
config_types=['.reg', '.ini', '.cfg', '.conf']
dll_types=['.dll', '.so', '.dylib']
shortcut_types=['.lnk']

extensions = executable_types + \
            script_types + \
            archive_types + \
            document_types + \
            disk_image_types + \
            installer_types + \
            config_types + \
            dll_types + \
            shortcut_types

def search_files(directory, output_file):
    with open(output_file, 'a') as outfile:
        for root, dirs, files in os.walk(directory):
            for file in files:
                if any(file.endswith(ext) for ext in extensions):
                    file_path = os.path.join(root, file)
                    outfile.write(file_path + '\n')
                    # print(f"Found and appended: {file_path}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Search for files with specified extensions and append their paths to a text file.")
    parser.add_argument('directory', type=str, help="The directory to search within")
    parser.add_argument('output_file', type=str, help="The text file to append the file paths to")
    args = parser.parse_args()

    search_files(args.directory, args.output_file)